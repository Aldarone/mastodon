version: '3'
services:

#  db:
#    restart: always
#    image: postgres:9.6-alpine
#    networks:
#      - internal_network
### Uncomment to enable DB persistance
#    volumes:
#      - ./data/pgsql:/var/lib/postgresql/data

#  redis:
#    restart: always
#    image: redis:4.0-alpine
#    networks:
#      - internal_network
### Uncomment to enable REDIS persistance
#    volumes:
#      - ./data/redis:/data

#  es:
#    restart: always
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.3
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    networks:
#      - internal_network
#### Uncomment to enable ES persistance
##    volumes:
##      - ./elasticsearch:/usr/share/elasticsearch/data

  web:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    environment:
      - WEB_CONCURRENCY=4
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
#    networks:
#      - external_network
#      - internal_network
    ports:
      - "127.0.0.1:3000:3000"
#    depends_on:
#      - db
#      - redis
#       - es

  streaming:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: yarn start
    networks:
      - external_network
      - internal_network
    ports:
      - "127.0.0.1:4000:4000"
#    depends_on:
#      - db
#      - redis

  sidekiq:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    environment:
      - DB_POOL=20
    command: bundle exec sidekiq -c 20 -q default -q mailers -q pull -q push
#    depends_on:
#      - db
#      - redis
    networks:
      - external_network
      - internal_network

networks:
  external_network:
  internal_network:
    internal: true
